@using CustomerRelationshipManagement.Shared;
@using CustomerRelationshipManagement.Shared.Models.Enums;
@using CustomerRelationshipManagement.Shared.Models;
@using CustomerRelationshipManagement.Shared.Models.Implementation;


<MudDialog>
    <DialogContent>
        <MudGrid Class="pa-2">

            <MudItem xs="12">

                <MudForm>
                    <MudRadioGroup @bind-SelectedOption="@SelectedOption">
                        <MudRadio Option="@("Radio 1")" Color="Color.Primary">ExistingAccount</MudRadio>
                        <MudRadio Option="@("Radio 2")" Color="Color.Secondary" Disabled>NewAccount</MudRadio>
                    </MudRadioGroup>
                </MudForm>
                @if (SelectedOption != "")
                {
                    <MudSelect Class="mud-width-full" Style="min-width:100%" Label="Account" @bind-Value="LeadItem.Account" OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary">
                        @foreach (Account item in Accounts)
                        {
                            var tempAcc = TemplateConfigurations.FirstOrDefault(x => x.Id == @item.TemplateConfigurationId);
                            <MudSelectItem Value="@item">@item.EmailAddress|@tempAcc.Organization|@tempAcc.Segment|@tempAcc.City|@tempAcc.Region</MudSelectItem>
                        }
                    </MudSelect>
                }

            </MudItem>

            @if (LeadItem.Account != null)
            {
                <MudItem xs="12" sm="5">
                    <div class="d-flex flex-grow-1 gap-4 flex-wrap justify-center mud-width-full">
                        <MudPaper Class="mud-theme-primary" Elevation="0" Height="30px" Width="100%">
                            <MudText Align="Align.Center" Style="vertical-align:central">Who?</MudText>
                        </MudPaper>
                        <MudTextField @bind-Value="LeadItem.Account.Name" Label="FirstName" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.LastName" Label="LastName" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.Organization" Label="Organization" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.Title" Label="Designation" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.EmailAddress" Label="EmailAddress" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.Phone" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.MobilePhone" Label="MobilePhone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.Fax" Label="Fax" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.WebSite" Label="Web Site" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudNumericField @bind-Value="LeadItem.Account.NumberOfEmployees" Label="Number of Employees" Min="0" Variant="Variant.Outlined" Margin="Margin.Dense"></MudNumericField>
                        <MudTextField Class="flex-grow-1" Width="100%" @bind-Value="LeadItem.Account.Address" Label="Address" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.City" Label="City" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.State" Label="State" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.PostalCode" Label="Pin/Zip" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="LeadItem.Account.Country" Label="Country" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                    </div>
                </MudItem>
                <MudItem xs="12" sm="4">
                    <div class="d-flex flex-grow-1 gap-4 flex-wrap justify-center mud-width-full">
                        <MudPaper Class="mud-theme-primary flex-grow-1" Elevation="0" Height="30px">
                            <MudText Align="Align.Center" Style="vertical-align:central">What?</MudText>
                        </MudPaper>


                        <MudTextField FullWidth="true" @bind-Value="LeadItem.Account.Industry" Label="Industry" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                        <MudTextField FullWidth="true" @bind-Value="LeadItem.Description" Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                        <MudSelect FullWidth="true" Label="SalesType" @bind-Value="LeadItem.SalesType" OpenIcon="@Icons.Material.Filled.AddRoad" Style="width:100%" AdornmentColor="Color.Primary">
                            @foreach (SalesType item in Enum.GetValues(typeof(SalesType)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>

                        <MudSelect Class="mud-width-full" Style="min-width:100%" Label="Geo" @bind-Value="LeadItem.Account.Geo" OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary">
                            @foreach (Geo item in Enum.GetValues(typeof(Geo)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>



                        <MudSelect FullWidth="true" Label="BusinessType" @bind-Value="LeadItem.BusinessType"
                                   OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                            @foreach (BusinessType item in Enum.GetValues(typeof(BusinessType)))
                            {
                                <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                            }
                        </MudSelect>

                        @if (LeadItem.BusinessType == BusinessType.DigitalAndInnovation.ToString())
                        {
                            <MudSelect FullWidth="true" Label="Offering" @bind-Value="LeadItem.Offering"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (DigitalInnovationOffering item in Enum.GetValues(typeof(DigitalInnovationOffering)))
                                {
                                    <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                                }
                            </MudSelect>
                        }


                        @if (LeadItem.BusinessType == BusinessType.EngineeringServices.ToString())
                        {
                            <MudSelect FullWidth="true" Label="Offering" @bind-Value="LeadItem.Offering"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (EngineeringOffering item in Enum.GetValues(typeof(EngineeringOffering)))
                                {
                                    <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                                }
                            </MudSelect>
                        }


                        @if (LeadItem.Offering == DigitalInnovationOffering.Service_TnM.ToString())
                        {
                            <MudSelect FullWidth="true" Label="ServiceLines" @bind-Value="LeadItem.ServiceLines"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (EnggServiceLines item in Enum.GetValues(typeof(EnggServiceLines)))
                                {
                                    <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                                }
                            </MudSelect>
                        }

                        @if (LeadItem.Offering == DigitalInnovationOffering.Service_Projects.ToString())
                        {
                            <MudSelect FullWidth="true" Label="ServiceLines" @bind-Value="LeadItem.ServiceLines"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (DI_ServiceLines item in Enum.GetValues(typeof(DI_ServiceLines)))
                                {
                                    <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                                }
                            </MudSelect>
                        }

                        @if (LeadItem.Offering == DigitalInnovationOffering.Products.ToString())
                        {
                            <MudSelect FullWidth="true" Label="ServiceLines" @bind-Value="LeadItem.ServiceLines"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (DIProducts item in Enum.GetValues(typeof(DIProducts)))
                                {
                                    <MudSelectItem Value="@item.ToString()">@item.ToString()</MudSelectItem>
                                }
                            </MudSelect>
                        }
                    </div>
                </MudItem>
                <MudItem xs="12" sm="3">

                    <div class="d-flex flex-grow-1 gap-4 flex-wrap justify-center mud-width-full">
                        <MudPaper Class="mud-theme-primary" Elevation="0" Height="30px" Width="100%">
                            <MudText Align="Align.Center" Style="vertical-align:central">When?</MudText>
                        </MudPaper>

                        <MudSelect Class="ax_fullWidth" Label="Source" FullWidth="true" @bind-Value="LeadItem.LeadSource"
                                   OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                            @foreach (LeadSource item in Enum.GetValues(typeof(LeadSource)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>

                        <MudSelect Label="Currency" FullWidth="true" @bind-Value="LeadItem.ForecastedValueCurrency"
                                   OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                            @foreach (Currency item in Enum.GetValues(typeof(Currency)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>
                        @if (IsLead)
                        {
                            <MudSelect Label="Status" FullWidth="true" @bind-Value="LeadItem.LeadStatus"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (LeadStatus item in Enum.GetValues(typeof(LeadStatus)))
                                {
                                    <MudSelectItem Value="@item">@item</MudSelectItem>
                                }
                            </MudSelect>
                        }
                        @if (IsOpportunity)
                        {
                            <MudSelect Label="Status" FullWidth="true" @bind-Value="LeadItem.Opportunity.Status"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (OpportunityCurrentState item in Enum.GetValues(typeof(OpportunityCurrentState)))
                                {
                                    <MudSelectItem Value="@item">@item</MudSelectItem>
                                }
                            </MudSelect>

                        }

                        @if (IsProject)
                        {

                            <MudSelect Label="Status" FullWidth="true" @bind-Value="LeadItem.Project.Status"
                                       OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                @foreach (ProjectState item in Enum.GetValues(typeof(ProjectState)))
                                {
                                    <MudSelectItem Value="@item">@item</MudSelectItem>
                                }
                            </MudSelect>

                            @if (LeadItem.Project.Status == ProjectState.InProgress)
                            {
                                <MudSelect Label="Inprogress Status" FullWidth="true" @bind-Value="LeadItem.Project.InpState"
                                           OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                    @foreach (InProgressSubState item in Enum.GetValues(typeof(InProgressSubState)))
                                    {
                                        <MudSelectItem Value="@item">@item</MudSelectItem>
                                    }
                                </MudSelect>
                            }


                            @if (LeadItem.Project.Status == ProjectState.Completed)
                            {
                                <MudSelect Label="Payment Status" FullWidth="true" @bind-Value="LeadItem.Project.PaymentStatus"
                                           OpenIcon="@Icons.Material.Filled.AddRoad" AdornmentColor="Color.Primary" Style="min-width:100%">
                                    @foreach (PaymentStatus item in Enum.GetValues(typeof(PaymentStatus)))
                                    {
                                        <MudSelectItem Value="@item">@item</MudSelectItem>
                                    }
                                </MudSelect>
                            }
                        }
                        <MudNumericField FullWidth="true" @bind-Value="LeadItem.ForecastedValue" Label="Forcasted value" Min="0" Variant="Variant.Outlined" Margin="Margin.Dense"></MudNumericField>
                    </div>
                </MudItem>
            }


        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [Parameter]
    public string Title { get; set; }


    [Parameter]
    public Lead LeadItem { get; set; }


    [Parameter]
    public bool IsLead { get; set; }
    [Parameter]
    public bool IsOpportunity { get; set; }
    [Parameter]
    public bool IsProject { get; set; }


    [Parameter]
    public List<Account> Accounts { get; set; }

    [Parameter]
    public List<TemplateConfiguration> TemplateConfigurations { get; set; }

    [Parameter]
    public List<EngagementModel> EngagementModels { get; set; }

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    public string SelectedOption { get; set; }





    public LeadOppProVC()
    {

    }



    void Submit(){

        LeadItem.AccountId = LeadItem.AccountId;
        MudDialog.Close(DialogResult.Ok(true));

    } 
    void Cancel() => MudDialog.Cancel();
}